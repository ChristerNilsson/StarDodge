// Generated by CoffeeScript 2.7.0
var S, draw, echo, mouseReleased, setup, start, startNewGame, touchEnded, touchStarted, touching;

touching = false;

touchStarted = function() {
  touching = true;
  return false;
};

touchEnded = function() {
  touching = false;
  return false;
};

mouseReleased = function() {
  return touching = false;
};

echo = console.log;

S = {
  x: 0,
  y: 0,
  level: 0,
  d: 50,
  stars: []
};

start = new Date();

startNewGame = function(rand = false) {
  start = new Date();
  if (rand) {
    S.stars = range(height * width / S.d / S.d).map(function(i) {
      return [width * random(), height * random()];
    });
  }
  return Object.assign(S, {
    level: S.level,
    x: 0,
    y: height / 2
  });
};

draw = function() {
  var j, k, len, len1, ref, ref1, ref2, x, y;
  bg(0.5);
  fill('red');
  sc();
  text(S.level, width / 2, height / 2);
  fill('yellow');
  ref = S.stars;
  for (j = 0, len = ref.length; j < len; j++) {
    [x, y] = ref[j];
    circle(x, y, S.level);
  }
  rect(width - 3, 0.4 * height, 2, 0.2 * height);
  if (mouseIsPressed && 0.1 * height > dist(mouseX, mouseY, 0, 0)) {
    startNewGame(true);
  }
  [S.x, S.y] = [S.x + 1, S.y + (mouseIsPressed || keyIsDown(32) ? 1 : -1)];
  sc(0);
  line(S.x, S.y, S.x + 500, S.y + 500);
  line(S.x, S.y, S.x + 500, S.y - 500);
  if (S.x > width && (0.4 * height < (ref1 = S.y) && ref1 < 0.6 * height)) {
    S.level++;
    localStorage.stardodge = JSON.stringify({
      level: S.level,
      lastUsed: new Date()
    });
    echo('saved', localStorage.stardodge);
    start = new Date();
    return startNewGame(true);
  }
  if (S.y < 0 || S.y > height || S.x > width) {
    return startNewGame(false);
  }
  ref2 = S.stars;
  for (k = 0, len1 = ref2.length; k < len1; k++) {
    [x, y] = ref2[k];
    if (S.level > dist(S.x, S.y, x, y)) {
      return startNewGame(false);
    }
  }
};

setup = function() {
  var millis, value;
  createCanvas(windowWidth, windowHeight);
  value = localStorage.stardodge;
  if (value === void 0 || value === null || value === 'null') {
    value = {
      level: 1,
      lastUsed: new Date()
    };
  } else {
    value = JSON.parse(value);
  }
  echo('loaded', value);
  millis = new Date() - new Date(value.lastUsed);
  if (millis > 60 * 60 * 1000) {
    value.level = 1;
  }
  S.level = value.level;
  textAlign(CENTER, CENTER);
  textSize(height);
  return startNewGame(true);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IlxcIiwic291cmNlcyI6WyJza2V0Y2guY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLGFBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLFlBQUEsRUFBQSxVQUFBLEVBQUEsWUFBQSxFQUFBOztBQUFBLFFBQUEsR0FBVzs7QUFDWCxZQUFBLEdBQWUsUUFBQSxDQUFBLENBQUE7RUFBRyxRQUFBLEdBQVc7U0FBTTtBQUFwQjs7QUFDZixVQUFBLEdBQWEsUUFBQSxDQUFBLENBQUE7RUFBRyxRQUFBLEdBQVc7U0FBTztBQUFyQjs7QUFDYixhQUFBLEdBQWdCLFFBQUEsQ0FBQSxDQUFBO1NBQUcsUUFBQSxHQUFXO0FBQWQ7O0FBRWhCLElBQUEsR0FBTyxPQUFPLENBQUM7O0FBRWYsQ0FBQSxHQUFJO0VBQUMsQ0FBQSxFQUFFLENBQUg7RUFBTSxDQUFBLEVBQUUsQ0FBUjtFQUFXLEtBQUEsRUFBTSxDQUFqQjtFQUFvQixDQUFBLEVBQUUsRUFBdEI7RUFBMEIsS0FBQSxFQUFNO0FBQWhDOztBQUNKLEtBQUEsR0FBUSxJQUFJLElBQUosQ0FBQTs7QUFFUixZQUFBLEdBQWUsUUFBQSxDQUFDLE9BQU8sS0FBUixDQUFBO0VBQ2QsS0FBQSxHQUFRLElBQUksSUFBSixDQUFBO0VBQ1IsSUFBRyxJQUFIO0lBQWEsQ0FBQyxDQUFDLEtBQUYsR0FBVSxLQUFBLENBQU0sTUFBQSxHQUFPLEtBQVAsR0FBYSxDQUFDLENBQUMsQ0FBZixHQUFpQixDQUFDLENBQUMsQ0FBekIsQ0FBMkIsQ0FBQyxHQUE1QixDQUFnQyxRQUFBLENBQUMsQ0FBRCxDQUFBO2FBQU8sQ0FBQyxLQUFBLEdBQU0sTUFBQSxDQUFBLENBQVAsRUFBaUIsTUFBQSxHQUFPLE1BQUEsQ0FBQSxDQUF4QjtJQUFQLENBQWhDLEVBQXZCOztTQUNBLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBZCxF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LFFBQUEsQ0FBQSxDQUFBO0FBQ1IsTUFBQSxNQUFBLEVBQUE7RUFBQyxZQUFBLENBQWEsV0FBYixFQUF5QixZQUF6QjtFQUNBLEtBQUEsR0FBUSxZQUFZLENBQUM7RUFDckIsSUFBRyxLQUFBLEtBQVMsTUFBVCxJQUFzQixLQUFBLEtBQVMsSUFBL0IsSUFBdUMsS0FBQSxLQUFTLE1BQW5EO0lBQStELEtBQUEsR0FBUTtNQUFDLEtBQUEsRUFBTyxDQUFSO01BQVcsUUFBQSxFQUFXLElBQUksSUFBSixDQUFBO0lBQXRCLEVBQXZFO0dBQUEsTUFBQTtJQUNLLEtBQUEsR0FBUSxJQUFJLENBQUMsS0FBTCxDQUFXLEtBQVgsRUFEYjs7RUFFQSxJQUFBLENBQUssUUFBTCxFQUFjLEtBQWQ7RUFDQSxNQUFBLEdBQVMsSUFBSSxJQUFKLENBQUEsQ0FBQSxHQUFhLElBQUksSUFBSixDQUFTLEtBQUssQ0FBQyxRQUFmO0VBQ3RCLElBQUksTUFBQSxHQUFTLEVBQUEsR0FBSyxFQUFMLEdBQVUsSUFBdkI7SUFBaUMsS0FBSyxDQUFDLEtBQU4sR0FBYyxFQUEvQzs7RUFDQSxDQUFDLENBQUMsS0FBRixHQUFVLEtBQUssQ0FBQztFQUNoQixTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtFQUNBLFFBQUEsQ0FBUyxNQUFUO1NBQ0EsWUFBQSxDQUFhLElBQWI7QUFYTyIsInNvdXJjZXNDb250ZW50IjpbInRvdWNoaW5nID0gZmFsc2VcclxudG91Y2hTdGFydGVkID0gLT4gdG91Y2hpbmcgPSB0cnVlOyBmYWxzZVxyXG50b3VjaEVuZGVkID0gLT4gdG91Y2hpbmcgPSBmYWxzZTsgZmFsc2VcclxubW91c2VSZWxlYXNlZCA9IC0+IHRvdWNoaW5nID0gZmFsc2VcclxuXHJcbmVjaG8gPSBjb25zb2xlLmxvZ1xyXG5cclxuUyA9IHt4OjAsIHk6MCwgbGV2ZWw6MCwgZDo1MCwgc3RhcnM6W119XHJcbnN0YXJ0ID0gbmV3IERhdGVcclxuXHJcbnN0YXJ0TmV3R2FtZSA9IChyYW5kID0gZmFsc2UpIC0+XHJcblx0c3RhcnQgPSBuZXcgRGF0ZSgpXHJcblx0aWYgcmFuZCB0aGVuIFMuc3RhcnMgPSByYW5nZShoZWlnaHQqd2lkdGgvUy5kL1MuZCkubWFwKChpKSAtPiBbd2lkdGgqcmFuZG9tKCksIGhlaWdodCpyYW5kb20oKV0pXHJcblx0T2JqZWN0LmFzc2lnbiBTLHtsZXZlbDpTLmxldmVsLCB4OjAsIHk6aGVpZ2h0LzJ9XHJcblxyXG5kcmF3ID0gLT5cclxuXHRiZyAwLjVcclxuXHJcblx0ZmlsbCAncmVkJ1xyXG5cdHNjKClcclxuXHR0ZXh0IFMubGV2ZWwsIHdpZHRoLzIsIGhlaWdodC8yXHJcblxyXG5cdGZpbGwgJ3llbGxvdydcclxuXHRjaXJjbGUgeCx5LFMubGV2ZWwgZm9yIFt4LHldIGluIFMuc3RhcnMgXHJcblxyXG5cdHJlY3Qgd2lkdGgtMywwLjQqaGVpZ2h0LDIsMC4yKmhlaWdodFxyXG5cclxuXHRpZiBtb3VzZUlzUHJlc3NlZCBhbmQgMC4xKmhlaWdodCA+IGRpc3QgbW91c2VYLG1vdXNlWSwgMCwwIHRoZW4gc3RhcnROZXdHYW1lIHRydWVcclxuXHRcclxuXHRbUy54LFMueV0gPSBbUy54KzEsIFMueSArIGlmIG1vdXNlSXNQcmVzc2VkIG9yIGtleUlzRG93biAzMiB0aGVuIDEgZWxzZSAtMV1cclxuXHRzYyAwXHJcblxyXG5cdGxpbmUgUy54LCBTLnksIFMueCArIDUwMCwgUy55ICsgNTAwXHJcblx0bGluZSBTLngsIFMueSwgUy54ICsgNTAwLCBTLnkgLSA1MDBcclxuXHJcblx0aWYgUy54ID4gd2lkdGggYW5kIDAuNCpoZWlnaHQgPCBTLnkgPCAwLjYqaGVpZ2h0IFxyXG5cdFx0Uy4gbGV2ZWwrK1xyXG5cdFx0bG9jYWxTdG9yYWdlLnN0YXJkb2RnZSA9IEpTT04uc3RyaW5naWZ5IHtsZXZlbDogUy5sZXZlbCwgbGFzdFVzZWQgOiBuZXcgRGF0ZSgpfVxyXG5cdFx0ZWNobyAnc2F2ZWQnLGxvY2FsU3RvcmFnZS5zdGFyZG9kZ2VcclxuXHRcdHN0YXJ0ID0gbmV3IERhdGUoKVxyXG5cdFx0cmV0dXJuIHN0YXJ0TmV3R2FtZSB0cnVlXHJcblx0aWYgUy55IDwgMCBvciBTLnkgPiBoZWlnaHQgb3IgUy54ID4gd2lkdGggXHJcblx0XHRyZXR1cm4gc3RhcnROZXdHYW1lIGZhbHNlXHJcblx0Zm9yIFt4LHldIGluIFMuc3RhcnNcclxuXHRcdGlmIFMubGV2ZWwgPiBkaXN0IFMueCxTLnksIHgseSB0aGVuIHJldHVybiBzdGFydE5ld0dhbWUgZmFsc2VcclxuXHJcbnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgsd2luZG93SGVpZ2h0XHJcblx0dmFsdWUgPSBsb2NhbFN0b3JhZ2Uuc3RhcmRvZGdlXHJcblx0aWYgdmFsdWUgPT0gdW5kZWZpbmVkIG9yIHZhbHVlID09IG51bGwgb3IgdmFsdWUgPT0gJ251bGwnIHRoZW4gdmFsdWUgPSB7bGV2ZWw6IDEsIGxhc3RVc2VkIDogbmV3IERhdGUoKX1cclxuXHRlbHNlIHZhbHVlID0gSlNPTi5wYXJzZSB2YWx1ZVxyXG5cdGVjaG8gJ2xvYWRlZCcsdmFsdWVcclxuXHRtaWxsaXMgPSBuZXcgRGF0ZSgpIC0gbmV3IERhdGUodmFsdWUubGFzdFVzZWQpXHJcblx0aWYgIG1pbGxpcyA+IDYwICogNjAgKiAxMDAwIHRoZW4gdmFsdWUubGV2ZWwgPSAxXHJcblx0Uy5sZXZlbCA9IHZhbHVlLmxldmVsXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHR0ZXh0U2l6ZSBoZWlnaHRcclxuXHRzdGFydE5ld0dhbWUgdHJ1ZVxyXG4iXX0=
//# sourceURL=c:\github\StarDodge\sketch.coffee