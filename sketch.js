// Generated by CoffeeScript 2.7.0
var Button, S, buttons, draw, echo, mouseReleased, setup, start, startNewGame, touchEnded, touchStarted, touching;

touching = false;

echo = console.log;

buttons = [];

S = {
  x: 0,
  y: 0,
  level: 0,
  d: 50,
  stars: []
};

start = new Date();

Button = class Button {
  constructor(x1, y1, text1, click) {
    this.x = x1;
    this.y = y1;
    this.text = text1;
    this.click = click;
    this.r = 0.05 * height;
  }

  inside(mx, my) {
    var dx, dy;
    dx = mx - this.x;
    dy = my - this.y;
    return dx * dx + dy * dy < this.r * this.r;
  }

  draw() {
    push();
    strokeWeight(1);
    noFill();
    circle(this.x, this.y, this.r);
    textSize(16);
    fill('black');
    noStroke();
    text(this.text, this.x, this.y);
    return pop();
  }

};

startNewGame = function(rand = false) {
  start = new Date();
  if (rand) {
    S.stars = range(height * width / S.d / S.d).map(function(i) {
      return [width * random(), height * random()];
    });
  }
  return Object.assign(S, {
    level: S.level,
    x: 0,
    y: height / 2
  });
};

draw = function() {
  var button, j, k, l, len, len1, len2, ref, ref1, ref2, results, x, y;
  bg(0.5);
  fill('red');
  sc();
  text(S.level, width / 2, height / 2);
  fill('yellow');
  ref = S.stars;
  for (j = 0, len = ref.length; j < len; j++) {
    [x, y] = ref[j];
    circle(x, y, S.level);
  }
  rect(width - 3, 0.4 * height, 2, 0.2 * height);
  [S.x, S.y] = [S.x + 1, S.y + (mouseIsPressed || keyIsDown(32) ? 1 : -1)];
  sc(0);
  line(S.x, S.y, S.x + 500, S.y + 500);
  line(S.x, S.y, S.x + 500, S.y - 500);
  if (S.x > width && (0.4 * height < (ref1 = S.y) && ref1 < 0.6 * height)) {
    S.level++;
    localStorage.stardodge = JSON.stringify({
      level: S.level
    });
    echo('saved', localStorage.stardodge);
    start = new Date();
    return startNewGame(true);
  }
  if (S.y < 0 || S.y > height || S.x > width) {
    return startNewGame(false);
  }
  ref2 = S.stars;
  for (k = 0, len1 = ref2.length; k < len1; k++) {
    [x, y] = ref2[k];
    if (S.level > dist(S.x, S.y, x, y)) {
      return startNewGame(false);
    }
  }
  results = [];
  for (l = 0, len2 = buttons.length; l < len2; l++) {
    button = buttons[l];
    results.push(button.draw());
  }
  return results;
};

setup = function() {
  var h, value;
  createCanvas(windowWidth, windowHeight);
  value = localStorage.stardodge;
  if (value === void 0 || value === null || value === 'null') {
    value = {
      level: 1
    };
  } else {
    value = JSON.parse(value);
  }
  echo('loaded', value);
  S.level = value.level;
  textAlign(CENTER, CENTER);
  textSize(height);
  startNewGame(true);
  h = 0.1 * height;
  buttons.push(new Button(h, h, 'Random', function() {
    return startNewGame(true);
  }));
  return buttons.push(new Button(h, height - h, 'Back', function() {
    if (S.level > 1) {
      S.level--;
      return startNewGame(true);
    }
  }));
};

touchEnded = function() {
  touching = false;
  return false;
};

touchStarted = function() {
  var button, j, len;
  if (touching) {
    return;
  }
  touching = true;
  for (j = 0, len = buttons.length; j < len; j++) {
    button = buttons[j];
    if (button.inside(mouseX, mouseY)) {
      button.click();
      return;
    }
  }
  return false;
};

mouseReleased = function() {
  return touching = false;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\StarDodge\sketch.coffee