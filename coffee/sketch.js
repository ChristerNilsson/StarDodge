// Generated by CoffeeScript 2.7.0
var S, draw, mouseReleased, setup, startNewGame, touchEnded, touchStarted, touching;

touching = false;

touchStarted = function() {
  touching = true;
  return false;
};

touchEnded = function() {
  touching = false;
  return false;
};

mouseReleased = function() {
  return touching = false;
};

S = {
  x: 0,
  y: 0,
  level: 0,
  d: 50,
  stars: []
};

startNewGame = function(dlevel, rand = false) {
  var j, len, ref, x, y;
  if (rand) {
    S.stars = range(height * width / S.d / S.d).map(function(i) {
      return [width * random(), height * random()];
    });
  }
  Object.assign(S, {
    level: S.level + dlevel,
    x: 0,
    y: height / 2
  });
  bg(0.5);
  fc(1, 1, 0);
  sc();
  ref = S.stars;
  for (j = 0, len = ref.length; j < len; j++) {
    [x, y] = ref[j];
    circle(x, y, S.level);
  }
  rect(width - 3, 0.4 * height, 2, 0.2 * height);
  textAlign(CENTER, CENTER);
  textSize(height);
  fc(1, 1, 1, 0.5);
  sc();
  return text(S.level, width / 2, height / 2);
};

draw = function() {
  var j, len, ref, ref1, x, y;
  if (mouseIsPressed && 10 > dist(mouseX, mouseY, 0, 0)) {
    startNewGame(0, true);
  }
  [S.x, S.y] = [S.x + 1, S.y + (mouseIsPressed || keyIsDown(32) ? 1 : -1)];
  sc(0);
  sw(1.5);
  point(S.x, S.y);
  if (S.x > width && (0.4 * height < (ref = S.y) && ref < 0.6 * height)) {
    return startNewGame(1, true);
  }
  if (S.y < 0 || S.y > height || S.x > width) {
    return startNewGame(0, false);
  }
  ref1 = S.stars;
  for (j = 0, len = ref1.length; j < len; j++) {
    [x, y] = ref1[j];
    if (S.level > dist(S.x, S.y, x, y)) {
      return startNewGame(0, false);
    }
  }
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  return startNewGame(1, true);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uXFwiLCJzb3VyY2VzIjpbImNvZmZlZVxcc2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLGFBQUEsRUFBQSxLQUFBLEVBQUEsWUFBQSxFQUFBLFVBQUEsRUFBQSxZQUFBLEVBQUE7O0FBQUEsUUFBQSxHQUFXOztBQUNYLFlBQUEsR0FBZSxRQUFBLENBQUEsQ0FBQTtFQUFHLFFBQUEsR0FBVztTQUFNO0FBQXBCOztBQUNmLFVBQUEsR0FBYSxRQUFBLENBQUEsQ0FBQTtFQUFHLFFBQUEsR0FBVztTQUFPO0FBQXJCOztBQUNiLGFBQUEsR0FBZ0IsUUFBQSxDQUFBLENBQUE7U0FBRyxRQUFBLEdBQVc7QUFBZDs7QUFFaEIsQ0FBQSxHQUFJO0VBQUMsQ0FBQSxFQUFFLENBQUg7RUFBTSxDQUFBLEVBQUUsQ0FBUjtFQUFXLEtBQUEsRUFBTSxDQUFqQjtFQUFvQixDQUFBLEVBQUUsRUFBdEI7RUFBMEIsS0FBQSxFQUFNO0FBQWhDOztBQUVKLFlBQUEsR0FBZSxRQUFBLENBQUMsTUFBRCxFQUFTLE9BQU8sS0FBaEIsQ0FBQTtBQUNmLE1BQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBO0VBQUMsSUFBRyxJQUFIO0lBQWEsQ0FBQyxDQUFDLEtBQUYsR0FBVSxLQUFBLENBQU0sTUFBQSxHQUFPLEtBQVAsR0FBYSxDQUFDLENBQUMsQ0FBZixHQUFpQixDQUFDLENBQUMsQ0FBekIsQ0FBMkIsQ0FBQyxHQUE1QixDQUFnQyxRQUFBLENBQUMsQ0FBRCxDQUFBO2FBQU8sQ0FBQyxLQUFBLEdBQU0sTUFBQSxDQUFBLENBQVAsRUFBaUIsTUFBQSxHQUFPLE1BQUEsQ0FBQSxDQUF4QjtJQUFQLENBQWhDLEVBQXZCOztFQUNBLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBZCxFQUFnQjtJQUFDLEtBQUEsRUFBTSxDQUFDLENBQUMsS0FBRixHQUFRLE1BQWY7SUFBdUIsQ0FBQSxFQUFFLENBQXpCO0lBQTRCLENBQUEsRUFBRSxNQUFBLEdBQU87RUFBckMsQ0FBaEI7RUFDQSxFQUFBLENBQUcsR0FBSDtFQUNBLEVBQUEsQ0FBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVA7RUFDQSxFQUFBLENBQUE7QUFDQTtFQUFBLEtBQUEscUNBQUE7SUFBdUIsQ0FBQyxDQUFELEVBQUcsQ0FBSDtJQUF2QixNQUFBLENBQU8sQ0FBUCxFQUFTLENBQVQsRUFBVyxDQUFDLENBQUMsS0FBYjtFQUFBO0VBQ0EsSUFBQSxDQUFLLEtBQUEsR0FBTSxDQUFYLEVBQWEsR0FBQSxHQUFJLE1BQWpCLEVBQXdCLENBQXhCLEVBQTBCLEdBQUEsR0FBSSxNQUE5QjtFQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO0VBQ0EsUUFBQSxDQUFTLE1BQVQ7RUFDQSxFQUFBLENBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsR0FBVDtFQUNBLEVBQUEsQ0FBQTtTQUNBLElBQUEsQ0FBSyxDQUFDLENBQUMsS0FBUCxFQUFjLEtBQUEsR0FBTSxDQUFwQixFQUF1QixNQUFBLEdBQU8sQ0FBOUI7QUFaYzs7QUFjZixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDUCxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUE7RUFBQyxJQUFHLGNBQUEsSUFBbUIsRUFBQSxHQUFLLElBQUEsQ0FBSyxNQUFMLEVBQVksTUFBWixFQUFvQixDQUFwQixFQUFzQixDQUF0QixDQUEzQjtJQUNDLFlBQUEsQ0FBYSxDQUFiLEVBQWUsSUFBZixFQUREOztFQUVBLENBQUMsQ0FBQyxDQUFDLENBQUgsRUFBSyxDQUFDLENBQUMsQ0FBUCxDQUFBLEdBQVksQ0FBQyxDQUFDLENBQUMsQ0FBRixHQUFJLENBQUwsRUFBUSxDQUFDLENBQUMsQ0FBRixHQUFNLENBQUcsY0FBQSxJQUFrQixTQUFBLENBQVUsRUFBVixDQUFyQixHQUF1QyxDQUF2QyxHQUE4QyxDQUFDLENBQS9DLENBQWQ7RUFDWixFQUFBLENBQUcsQ0FBSDtFQUNBLEVBQUEsQ0FBRyxHQUFIO0VBQ0EsS0FBQSxDQUFNLENBQUMsQ0FBQyxDQUFSLEVBQVUsQ0FBQyxDQUFDLENBQVo7RUFDQSxJQUFHLENBQUMsQ0FBQyxDQUFGLEdBQU0sS0FBTixJQUFnQixDQUFBLEdBQUEsR0FBSSxNQUFKLFVBQWEsQ0FBQyxDQUFDLEVBQWYsT0FBQSxHQUFtQixHQUFBLEdBQUksTUFBdkIsQ0FBbkI7QUFBc0QsV0FBTyxZQUFBLENBQWEsQ0FBYixFQUFnQixJQUFoQixFQUE3RDs7RUFDQSxJQUFHLENBQUMsQ0FBQyxDQUFGLEdBQU0sQ0FBTixJQUFXLENBQUMsQ0FBQyxDQUFGLEdBQU0sTUFBakIsSUFBMkIsQ0FBQyxDQUFDLENBQUYsR0FBTSxLQUFwQztBQUErQyxXQUFPLFlBQUEsQ0FBYSxDQUFiLEVBQWdCLEtBQWhCLEVBQXREOztBQUNBO0VBQUEsS0FBQSxzQ0FBQTtJQUFJLENBQUMsQ0FBRCxFQUFHLENBQUg7SUFDSCxJQUFHLENBQUMsQ0FBQyxLQUFGLEdBQVUsSUFBQSxDQUFLLENBQUMsQ0FBQyxDQUFQLEVBQVMsQ0FBQyxDQUFDLENBQVgsRUFBYyxDQUFkLEVBQWdCLENBQWhCLENBQWI7QUFBb0MsYUFBTyxZQUFBLENBQWEsQ0FBYixFQUFnQixLQUFoQixFQUEzQzs7RUFERDtBQVRNOztBQVlQLEtBQUEsR0FBUSxRQUFBLENBQUEsQ0FBQTtFQUNQLFlBQUEsQ0FBYSxXQUFiLEVBQXlCLFlBQXpCO1NBQ0EsWUFBQSxDQUFhLENBQWIsRUFBZ0IsSUFBaEI7QUFGTyIsInNvdXJjZXNDb250ZW50IjpbInRvdWNoaW5nID0gZmFsc2VcclxudG91Y2hTdGFydGVkID0gLT4gdG91Y2hpbmcgPSB0cnVlOyBmYWxzZVxyXG50b3VjaEVuZGVkID0gLT4gdG91Y2hpbmcgPSBmYWxzZTsgZmFsc2VcclxubW91c2VSZWxlYXNlZCA9IC0+IHRvdWNoaW5nID0gZmFsc2VcclxuXHJcblMgPSB7eDowLCB5OjAsIGxldmVsOjAsIGQ6NTAsIHN0YXJzOltdfVxyXG5cclxuc3RhcnROZXdHYW1lID0gKGRsZXZlbCwgcmFuZCA9IGZhbHNlKSAtPlxyXG5cdGlmIHJhbmQgdGhlbiBTLnN0YXJzID0gcmFuZ2UoaGVpZ2h0KndpZHRoL1MuZC9TLmQpLm1hcCgoaSkgLT4gW3dpZHRoKnJhbmRvbSgpLCBoZWlnaHQqcmFuZG9tKCldKVxyXG5cdE9iamVjdC5hc3NpZ24gUyx7bGV2ZWw6Uy5sZXZlbCtkbGV2ZWwsIHg6MCwgeTpoZWlnaHQvMn1cclxuXHRiZyAwLjVcclxuXHRmYyAxLDEsMFxyXG5cdHNjKClcclxuXHRjaXJjbGUgeCx5LFMubGV2ZWwgZm9yIFt4LHldIGluIFMuc3RhcnMgXHJcblx0cmVjdCB3aWR0aC0zLDAuNCpoZWlnaHQsMiwwLjIqaGVpZ2h0XHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHR0ZXh0U2l6ZSBoZWlnaHRcclxuXHRmYyAxLDEsMSwwLjVcclxuXHRzYygpXHJcblx0dGV4dCBTLmxldmVsLCB3aWR0aC8yLCBoZWlnaHQvMlxyXG5cclxuZHJhdyA9IC0+XHJcblx0aWYgbW91c2VJc1ByZXNzZWQgYW5kIDEwID4gZGlzdCBtb3VzZVgsbW91c2VZLCAwLDBcclxuXHRcdHN0YXJ0TmV3R2FtZSAwLHRydWVcclxuXHRbUy54LFMueV0gPSBbUy54KzEsIFMueSArIGlmIG1vdXNlSXNQcmVzc2VkIG9yIGtleUlzRG93biAzMiB0aGVuIDEgZWxzZSAtMV1cclxuXHRzYyAwXHJcblx0c3cgMS41XHJcblx0cG9pbnQgUy54LFMueVxyXG5cdGlmIFMueCA+IHdpZHRoIGFuZCAwLjQqaGVpZ2h0IDwgUy55IDwgMC42KmhlaWdodCB0aGVuIHJldHVybiBzdGFydE5ld0dhbWUgMSwgdHJ1ZVxyXG5cdGlmIFMueSA8IDAgb3IgUy55ID4gaGVpZ2h0IG9yIFMueCA+IHdpZHRoIHRoZW4gcmV0dXJuIHN0YXJ0TmV3R2FtZSAwLCBmYWxzZVxyXG5cdGZvciBbeCx5XSBpbiBTLnN0YXJzXHJcblx0XHRpZiBTLmxldmVsID4gZGlzdCBTLngsUy55LCB4LHkgdGhlbiByZXR1cm4gc3RhcnROZXdHYW1lIDAsIGZhbHNlXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLHdpbmRvd0hlaWdodFxyXG5cdHN0YXJ0TmV3R2FtZSAxLCB0cnVlXHJcbiJdfQ==
//# sourceURL=c:\github\StarDodge\coffee\sketch.coffee